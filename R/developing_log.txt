mini <- lalonde[c(41:60, 701:720), ]
test <- mini[c(1,2,8,9,11,16, 27,29,32,34,36,38),]
dis <- mini[-c(1,2,8,9,11,16, 27,29,32,34,36,38),]
mini <- lalonde[c(1:40, 681:720), ]
fit <- causalTree(income ~ past_income + age, data  = mini, treatment = mini$treatment, split.Rule = 'TOT', split.Honest = F, splitHonestSampleSize = 0.3, bucketNum = 0, cv.option = 'TOT', cv.Honest = T, cp = 0, xval = 5)
ystar <- mini$income * (mini$treatment - p) /(p * (1 - p))
newmini <- cbind(mini, ystar)
newfit <- rpart(ystar~ past_income + age, data = mini, method = "anova", cp = 0, xval = 5)

######################################################
          CP nsplit rel error   xerror      xstd
1 0.20277923      0 1.0000000 1.060844 0.5100449
2 0.05835942      1 0.7972208 1.190058 0.5066085
3 0.05224725      2 0.7388614 1.196579 0.5424150
4 0.00000000      3 0.6866141 1.109817 0.5032150


n= 40 
node), split, n, deviance, yval
      * denotes terminal node

1) root 40 10542.9000   2.4837350  
  2) past_income< 2.593314 28  3318.3820  -2.3022720  
    4) age>=22 20  1548.5440  -5.2670110  
      8) past_income< 0.1670246 8   874.6677 -11.6945200 *
      9) past_income>=0.1670246 12   123.0389  -0.9820086 *
    5) age< 22 8  1154.5610   5.1095750 *
  3) past_income>=2.593314 12  5086.6350  13.6510900 *
#######################################################

large <- simulation.1
fit <- causalTree(y ~ x1 + x2 + x3 + x4 , data  = large, treatment = large$treatment, split.Rule = 'TOT', split.Honest = F, splitHonestSampleSize = 0.3, bucketNum = 0, cv.option = 'TOT', cv.Honest = F, cp = 0, propensity = 0.5, xval = 10)

ystar <- large$y * (large$treatment - p) / (p * (1 - p))
newlarge <- cbind(large, ystar)
newfit <- rpart(ystar ~ x1 + x2 + x3 + x4, data = newlarge, method = "anova", cp = 0.03)





#### to-do:
# finish honest.causalTree.R ----- :)
# finish honest_xval.c  ----- :)
# init, ss, split, pred    ----- :)
# change tot.init, tot.ss, tot., tot.pred,.tot.xeval
# xss: TOT, matching
# change the code tot.c, totpred.c
# change the code ....
# only finish the non-discrete version of the codes
# change object

idx1 <- c(idx2, idx3)
tau(large[idx1, ])
tau <- function(data) {
    y <- data$y
    treatment <- data$treatment
    return (mean(data$y[which(treatment == 1)]) - mean(data$y[which(treatment == 0)]))
}